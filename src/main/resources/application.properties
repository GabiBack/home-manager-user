spring.application.name=home-manager-user
spring.sql.init.mode=always

## Database (postgres deployed on docker) connection
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.initialization-mode=always
spring.datasource.platform=postgres

## Local testing
spring.datasource.url=jdbc:postgresql://localhost:1000/postgres

## Docker database
#spring.datasource.url=jdbc:postgresql://db-home-manager-user:5050/db-home-manager-user
spring.datasource.username=postgres
spring.datasource.password=mysecretpassword

## Kafka
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

## JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

## Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

## Spring security
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8083/auth/realms/baeldung
spring.security.oauth2.resourceserver.jwk-set-uri=http://localhost:8083/auth/realms/baeldung/protocol/openid-connect/certs

## ActiveMq settings
#---spring.activemq.broker-url=tcp://172.17.0.3
#activemq.broker-url=http://localhost:8161/admin
#activemq.user=admin
#activemq.password=admin
#logging.level.org.apache.activemq.transport=TRACE
